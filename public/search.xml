<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>netty如何支持三种Reactor</title>
      <link href="/2022/03/13/netty-ru-he-zhi-chi-san-chong-reactor/"/>
      <url>/2022/03/13/netty-ru-he-zhi-chi-san-chong-reactor/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是Reactor及三种版本"><a href="#什么是Reactor及三种版本" class="headerlink" title="什么是Reactor及三种版本"></a>什么是Reactor及三种版本</h3><ul><li><p>Reactor单线程<br>客户端请求到达服务端，服务端创建一个线程处理读取、解码、业务处理、编码、返回响应一整个流程</p></li><li><p>Reactor多线程模式<br>将解码、业务处理、编码的这三个操作都由工作线程池来处理</p></li><li><p>主从Reactor多线程模式</p></li></ul><p>主Reactor负责接收请求，从Reactor负责读请求和写响应，工作线程负责解码、业务处理、编码。</p><p>Reactor是一种开发模式，模式的核心流程：<br>注册感兴趣的事件 -&gt;扫描是否有感兴趣的事件发生 -&gt;事件发生后做出相应处理</p><table><thead><tr><th align="left">client/server</th><th align="left">SocketChannel/ServerSocketChannel</th><th align="left">OP_ACCEPT</th><th align="left">OP_CONNECT</th><th align="left">OP_WRITE</th><th align="left">OP_READ</th></tr></thead><tbody><tr><td align="left">client</td><td align="left">SocketChannel</td><td align="left"></td><td align="left">Y</td><td align="left">Y</td><td align="left">Y</td></tr><tr><td align="left">server</td><td align="left">ServerSocketChannel</td><td align="left">Y</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">server</td><td align="left">SocketChannel</td><td align="left"></td><td align="left"></td><td align="left">Y</td><td align="left">Y</td></tr></tbody></table><h3 id="如何在Netty中使用Reactor模式"><a href="#如何在Netty中使用Reactor模式" class="headerlink" title="如何在Netty中使用Reactor模式"></a>如何在Netty中使用Reactor模式</h3><ul><li><p>Reactor单线程模式：</p><pre class="line-numbers language-none"><code class="language-none">EventLoopGroup eventGroup = new NioEventLoopGroup(1);ServerBootstrap serverBootstrap = new ServerBootstrap();serverBootstrap.group(eventGroup);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>非主从Reactor多线程模式</p><pre class="line-numbers language-none"><code class="language-none">EventLoopGroup eventGroup = new NioEventLoopGroup();ServerBootstrap serverBootstrap = new ServerBootstrap();serverBootstrap.group(eventGroup);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>主从Reactor多线程模式</p><pre class="line-numbers language-none"><code class="language-none">EventLoopGroup bossGroup = new NioEventLoopGroup();EventLoopGroup workerGroup = new NioEventLoopGroup();ServerBootstrap serverBootstrap = new ServerBootstrap();serverBootstrap.group(bossGroup, workerGroup)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="解析Netty对Reactor模式支持的常见疑问"><a href="#解析Netty对Reactor模式支持的常见疑问" class="headerlink" title="解析Netty对Reactor模式支持的常见疑问"></a>解析Netty对Reactor模式支持的常见疑问</h3><p>Netty如何支持主从Reactor模式？</p><p>通过传递过来的channel创建子Channel，两种SocketChannel绑定到两个Gruop里面去，这样就完成了主从Reactor模式的支持。</p><p>为什么说Netty的main reactor大多数并不能用到一个线程组，只能线程组里的一个？<br>因为一个服务器一般来说只用绑定一个地址，一个端口</p><p>Netty给Channel分配NIO event loop的规则是什么？</p><p>1、增值、取模、取正值</p><p>2、executors总数是2的幂次方然后&amp;运算</p><p>通常模式的NIO实现多路复用器是怎么跨平台的？<br>通过JDK 读取平台信息 ，创建适合不同平台的实现</p>]]></content>
      
      
      <categories>
          
          <category> Netty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Netty </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
